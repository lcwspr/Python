"""
    概念   无序的 不可随机访问的  不可重复的元素集合
    与数学中集合类似   可以进行 交并查补等逻辑运算

    分为可变集合
            set    可变集合
                    增
                    删
                    改
    不可变集合
            frozenset   不可变集合   创建好后  无法增删查改


?  集合有怎样的特性
？  集合的分类可变集合与不可变集合的区别




    集合的定义
            可变集合  Set

                1 s = {1, 2, 3, 4}

                2 s = set(iterable)
                        可迭代对象为字典时  只会将key 变为集合

                3 集合推导式
                s = set(x**2 for x in range(1, 10) if x% 2 == 0)
                或者 {x**2 for x in range(1, 10)if x % 2 ==0 }


            不可变集合 frozenset
            fs = frozenset(iterable)  其中 iterable可以是 字符串  列表 元组  字典     但是 dic时  只会获取key 作为set 元素

            列表推导式  s = frozenset(x** 3 for x in range(1, 10) if x % 3 == 0)


            1 创建一个空集合时   需要使用set()或者 frozenset() 不能使用s = {}  会被识别成为字典

            2 集合中的元素  必须是可哈希的值
            如果一个对象在自己的生命周期中 有一哈希值（hash value） 是不可变的， 那么他就是可哈希的(hashable)    暂时理解为  不可变类型

            3 如果集合中的元素 值出现重复 则会被合并为1 个


            给列表元素去重
            l = [1, 2, 3, 4, 4, 5, 3]
            s = set(l)
            result = list(s)

            ?? 总结集合定义的注意事项
            ?? 尝试借助集合给列表取出重复元素

常用操作
        单一集合操作
                可变集合
                        增
                                通过 集合的add() 方法
                                加入集合的元素 必须要是可哈希的 不可变的


                        删
                                s.remove(element)
                                        指定删除set对象中的一个元素
                                        如果集合中没有这个元素 则返回一个错误

                                s.discard(element)
                                        指定删除集合中的一个元素
                                        若没有这个元素 则  do nothing

                                s.pop()
                                        随机删除并返回一个集合中的元素
                                        若集合为空  则返回一个错误

                                s.clear()
                                        清空一个集合中的所有元素


                                使用del 语句 可以删除整个集合
                                ?  如何删除并取出集合中某个元素
                                ?  删除和清空集合有什么区别


                        改
                                元素为不可变类型  不能修改


                        查
                                无法通过索引或key 进行查询
                                    1 通过for in 进行遍历

                                        for v in s:
                                            print(v)

                                    2 通过迭代器进行访问

                                        1 生成一个迭代器
                                                its = iter(s)
                                        2 使用这个迭代器去访问  next()  或  for  in
                                        print(next(its))
                                        注意  迭代器  一般不能复用 只能使用一次

                不可变集合
                        不能增删改
                        查
                            1 通过for in 进行遍历
                            2 通过迭代器进行访问

                ?  使用多种方式获取元素
                ?  什么是迭代器


        集合之间操作

                交集
                        1 intersection(Iterable)  取交集

                            s1 = {1, 2, 3, 4, 5}
                            s2 = {4, 5, 6}
                            result = s1.intersection(s2)

                            可以判定可迭代序列
                                字符串  只判定字符串中的非数字
                                列表
                                元组
                                字典   值判定key
                                集合
                            其实会把他转成集合类型 然后在去交集  转换可能会出错



                       2 & 可以使用逻辑 与

                       3 s1.intersection_update(s2)  会直接修改 调用者


                           ??  1 什么是交集
                           ??  2 如何计算
                           ??  3 可变 不可变 结果如何



                并集
                    union()    返回并集
                    逻辑或 |    返回并集
                    update()    更新并集



                差集
                        也就是 属于a  但是不属于b的部分
                        difference()

                        算数运算符     -

                        difference_update()


                            例子
                                    s1 = {1, 2, 3}
                                    s2 = {3, 4, 5}
                                    s1.difference(s2)   1,2

                                    s1 - s2

                                     difference_update()    修改原集合  无返回值



                判定

                            isdisjoint()  两个集合不向交
                            issuperset()   一个集合包含另一个集合    完全包含
                            issubset()    一个集合包含于另一个集合     完全被包含

                            s1 = {1, 2, 3}
                            s3 = {3, 4, 5}


        注意
                可变与不可变集合混合运算  返回结果类型以运算符左侧为主







"""

str1 = "abc"  # 有序  可以通过索引访问数据
l = [1, 2, 3]  # 有序                 随机访问的
t = (1, 2, 3)  # 有序
d = {"name": "sz", "age": 23}  # 无序

# 可以通过写一个索引 或者一个值  来随机访问


# 集合

s = {1, 2, 3}

print(set(x ** 2 for x in range(0, 10)))



































