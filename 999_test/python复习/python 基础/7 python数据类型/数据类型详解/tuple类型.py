

"""
    概念  有序的不可变的元素集合
    和列表的区别就是   元组元素不能修改

    定义：
        一个元素的定义写法  (666,)
        多个元素的定义写法  (666, 33, 66)
        多个对象，以逗号隔开  默认为元组   tuple = 2, 5, 4, "sz"
        从列表转换为元组     tuple(seq)
        补充    元组的嵌套    元组中的元素可以是元组    (1, 2, ("a", "b"))




    常用操作    注意  不能增加   删除  修改
    只能够查询
    t= (1, 2, 3, 4)

    查
        获取单个元素
        tuple[index]
        index 为索引
            可以为负数

        获取多个元素
        切片
        tuple[index: end: step]

        反转
        tuple[::-1]




    额外操作
            获取
                对象方法
                tuple.count(item)
                统计元组中指定元素的个数

                tuple.index(item)
                获取元组中指定元素的索引    不存在会报错

                内建函数
                len(tuple)
                返回元组中元素的个数

                max(tup)
                返回元组中的元素最大值

                min(tup)
                返回元组中元组的最小值


            判定
                元素  in  元组
                元素 not in  元组   （可以适用于  元组  字符串  列表）




            比较

            cmp()   2.x版本      如果类型不相同   会比较类型的首字母
                内建函数
                如果比较的是元组    则针对每一个元素    从左到右 逐一比较
                左>右   1
                左=右   0
                左<右   -1
                python 3.x不支持
                可以使用 比较运算符
                ==
                >=
                <
                !=
                ...




            拼接操作
                    乘法
                        (元素1, 元素2.....)* int类型值
                        = （元素1, 元素2.....，元素1, 元素2.....，元素1, 元素2.....）


                    加法
                        （元素1, 元素2.....）+（元素a, 元素b.....）
                    =(元素1, 元素2.....,元素a, 元素b.....)

                    如果元组  和 列表相加    会报错


            拆包操作

                    a, b = (1, 2)
                    a = 1
                    b = 2

"""

t = (4, 5, 6, 6, 89)
print(type(t))


l = [1, 3, 5, 6, 6]
changTuple = tuple(l)
print(changTuple, type(t))

print(l[::-1])

a = 23
b = 45
a, b = b, a
print(a)
print(b)